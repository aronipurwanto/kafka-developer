# docker-compose.yml
version: "3.8"

x-kafka-common: &kafka-common
  image: confluentinc/cp-kafka:7.5.0
  restart: unless-stopped
  environment:
    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    # Listener internal untuk antar-broker & klien dalam jaringan docker
    KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
    # Listener yang diiklankan (internal & host)
    # NOTE: untuk Mac/Windows kadang perlu host.docker.internal
    # ganti "localhost" dengan IP host jika diakses dari mesin lain
    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://{HOSTNAME}:29092,PLAINTEXT_HOST://localhost:{HOSTPORT}
    KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
    KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
    KAFKA_MIN_INSYNC_REPLICAS: 2
    KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    KAFKA_DELETE_TOPIC_ENABLE: "true"
    KAFKA_NUM_PARTITIONS: 3
  healthcheck:
    test: ["CMD", "bash", "-c", "kafka-broker-api-versions --bootstrap-server localhost:29092 || exit 1"]
    interval: 10s
    timeout: 5s
    retries: 10
  ulimits:
    nofile:
      soft: 100000
      hard: 100000
  networks:
    - kafka-net

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-txn-logs:/var/lib/zookeeper/log
    healthcheck:
      test: ["CMD", "bash", "-c", "echo ruok | nc -w 2 localhost 2181 | grep imok"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - kafka-net

  kafka1:
    <<: *kafka-common
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "9991:9991"
    environment:
      <<: *kafka-common.environment
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_JMX_PORT: 9991
      KAFKA_JMX_HOSTNAME: kafka1
    volumes:
      - kafka1-data:/var/lib/kafka/data
    depends_on:
      zookeeper:
        condition: service_healthy

  kafka2:
    <<: *kafka-common
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9093:9092"
      - "9992:9992"
    environment:
      <<: *kafka-common.environment
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_JMX_PORT: 9992
      KAFKA_JMX_HOSTNAME: kafka2
    volumes:
      - kafka2-data:/var/lib/kafka/data
    depends_on:
      zookeeper:
        condition: service_healthy

  kafka3:
    <<: *kafka-common
    hostname: kafka3
    container_name: kafka3
    ports:
      - "9094:9092"
      - "9993:9993"
    environment:
      <<: *kafka-common.environment
      KAFKA_BROKER_ID: 3
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29092,PLAINTEXT_HOST://localhost:9094
      KAFKA_JMX_PORT: 9993
      KAFKA_JMX_HOSTNAME: kafka3
    volumes:
      - kafka3-data:/var/lib/kafka/data
    depends_on:
      zookeeper:
        condition: service_healthy

  kafka4:
    <<: *kafka-common
    hostname: kafka4
    container_name: kafka4
    ports:
      - "9095:9092"
      - "9994:9994"
    environment:
      <<: *kafka-common.environment
      KAFKA_BROKER_ID: 4
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka4:29092,PLAINTEXT_HOST://localhost:9095
      KAFKA_JMX_PORT: 9994
      KAFKA_JMX_HOSTNAME: kafka4
    volumes:
      - kafka4-data:/var/lib/kafka/data
    depends_on:
      zookeeper:
        condition: service_healthy

  kafka5:
    <<: *kafka-common
    hostname: kafka5
    container_name: kafka5
    ports:
      - "9096:9092"
      - "9995:9995"
    environment:
      <<: *kafka-common.environment
      KAFKA_BROKER_ID: 5
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka5:29092,PLAINTEXT_HOST://localhost:9096
      KAFKA_JMX_PORT: 9995
      KAFKA_JMX_HOSTNAME: kafka5
    volumes:
      - kafka5-data:/var/lib/kafka/data
    depends_on:
      zookeeper:
        condition: service_healthy

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "My Local Kafka Cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka1:29092,kafka2:29092,kafka3:29092,kafka4:29092,kafka5:29092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
      # (Opsional) aktifkan metrics via JMX; Kafka UI bisa scrape dari tiap broker
      KAFKA_CLUSTERS_0_JMXPORT: "9991"
      KAFKA_CLUSTERS_0_JMXHOSTNAME: "kafka1"
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy
      kafka4:
        condition: service_healthy
      kafka5:
        condition: service_healthy
    networks:
      - kafka-net

networks:
  kafka-net:

volumes:
  zk-data:
  zk-txn-logs:
  kafka1-data:
  kafka2-data:
  kafka3-data:
  kafka4-data:
  kafka5-data:
